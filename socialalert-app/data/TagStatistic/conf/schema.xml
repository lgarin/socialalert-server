<?xml version="1.0" encoding="UTF-8" ?>
<schema name="tagStatistic" version="1.5">
	<fields>
		<field name="tag" type="string" indexed="true" stored="true" required="true" multiValued="false" />
		<field name="useCount" type="integer" indexed="true" stored="true" required="false" multiValued="false"/>
		<field name="searchCount" type="integer" indexed="true" stored="true" required="false" multiValued="false"/>
		<field name="_version_" type="long" indexed="true" stored="true"/>
	</fields>

	<uniqueKey>tag</uniqueKey>
	<!-- Configure copy fields here -->

	<types>
		<fieldType name="binary" class="solr.BinaryField"
			sortMissingLast="true" omitNorms="true" />
	
		<!-- The StrField type is not analyzed, but indexed/stored verbatim. - StrField 
			and TextField support an optional compressThreshold which limits compression 
			(if enabled in the derived fields) to values which exceed a certain size 
			(in characters). -->
		<fieldType name="string" class="solr.StrField"
			sortMissingLast="true" omitNorms="true" />
	
		<!-- boolean type: "true" or "false" -->
		<fieldType name="boolean" class="solr.BoolField"
			sortMissingLast="true" omitNorms="true" />
	
		<!-- The optional sortMissingLast and sortMissingFirst attributes are currently 
			supported on types that are sorted internally as strings. - If sortMissingLast="true", 
			then a sort on this field will cause documents without the field to come 
			after documents with the field, regardless of the requested sort order (asc 
			or desc). - If sortMissingFirst="true", then a sort on this field will cause 
			documents without the field to come before documents with the field, regardless 
			of the requested sort order. - If sortMissingLast="false" and sortMissingFirst="false" 
			(the default), then default lucene sorting will be used which places docs 
			without the field first in an ascending sort and last in a descending sort. -->
	
	
		<!-- Numeric field types that manipulate the value into a string value that 
			isn't human-readable in its internal form, but with a lexicographic ordering 
			the same as the numeric ordering, so that range queries work correctly. -->
		<fieldType name="integer" class="solr.TrieIntField"
			sortMissingLast="true" omitNorms="true" />
		<fieldType name="long" class="solr.TrieLongField"
			sortMissingLast="true" omitNorms="true" />
		<fieldType name="float" class="solr.TrieFloatField"
			sortMissingLast="true" omitNorms="true" />
		<fieldType name="double" class="solr.TrieDoubleField"
			sortMissingLast="true" omitNorms="true" />
	
	
		<!-- The format for this date field is of the form 1995-12-31T23:59:59Z, 
			and is a more restricted form of the canonical representation of dateTime 
			http://www.w3.org/TR/xmlschema-2/#dateTime The trailing "Z" designates UTC 
			time and is mandatory. Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z 
			All other components are mandatory. Expressions can also be used to denote 
			calculations that should be performed relative to "NOW" to determine the 
			value, ie... NOW/HOUR ... Round to the start of the current hour NOW-1DAY 
			... Exactly 1 day prior to now NOW/DAY+6MONTHS+3DAYS ... 6 months and 3 days 
			in the future from the start of the current day Consult the DateField javadocs 
			for more information. -->
		<fieldType name="date" class="solr.TrieDateField"
			sortMissingLast="true" omitNorms="true" />
	
		<!-- Represents a Latitude/Longitude as a 2 dimensional point. -->
		<fieldType name="location" class="solr.LatLonType"
			sortMissingLast="true" omitNorms="true" subFieldType="double" />
	
		<fieldType name="uuid" class="solr.UUIDField"
			sortMissingLast="true" omitNorms="true" />
	
		<!-- A text field -->
		<fieldType name="text" class="solr.TextField"
			positionIncrementGap="100">
			<analyzer>
				<tokenizer class="solr.StandardTokenizerFactory"/>
				<filter class="solr.LowerCaseFilterFactory"/>
			</analyzer>
		</fieldType>
	</types>
</schema>